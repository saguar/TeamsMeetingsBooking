{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "appinsights_name": {
            "type": "string"
        },
        "function_name": {
            "type": "string"
        },
        "keyvault_name": {
            "type": "string"
        },
        "storage_name": {
            "type": "string"
        },
        "userpassword_secret_value": {
            "type": "securestring"
        },
        "appId": {
            "type": "string"
        },
        "user_upn": {
            "type": "string"
        }
    },
    "variables": {
        "plan_name": "[concat(parameters('function_name'),'-plan')]",
        "userpassword_secret_name": "meetingsmanager-userpassword",
        "storage_secret_name": "storage-connstring"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('appinsights_name')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest",
                "Flow_Type": "Bluefield"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('plan_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "app",
            "properties": {
                "name": "[variables('plan_name')]",
                "computeMode": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('function_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('plan_name'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('plan_name'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('function_name'), '/appsettings')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('function_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_name'))]"
            ],
            "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/Components/',parameters('appinsights_name'))).InstrumentationKey]",
                "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=',reference(concat('Microsoft.KeyVault/vaults/',parameters('keyvault_name'),'/secrets/',variables('storage_secret_name'))).secretUriWithVersion,')')]",
                "FUNCTIONS_EXTENSION_VERSION": "~2",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=',reference(concat('Microsoft.KeyVault/vaults/',parameters('keyvault_name'),'/secrets/',variables('storage_secret_name'))).secretUriWithVersion,')')]",
                "WEBSITE_CONTENTSHARE": "[toLower(parameters('function_name'))]",
                "WEBSITE_NODE_DEFAULT_VERSION": "10.14.1",
                "TenantID": "[subscription().tenantId]",
                "ClientID": "[parameters('appId')]",
                "UserEmail": "[parameters('user_upn')]",
                "UserPassword": "[concat('@Microsoft.KeyVault(SecretUri=',reference(concat('Microsoft.KeyVault/vaults/',parameters('keyvault_name'),'/secrets/',variables('userpassword_secret_name'))).secretUriWithVersion,')')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('keyvault_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(concat('Microsoft.Web/sites/',parameters('function_name')),'2016-08-01','Full').identity.tenantId]",
                        "objectId": "[reference(concat('Microsoft.Web/sites/',parameters('function_name')),'2016-08-01','Full').identity.principalId]",
                        "permissions": {
                            "keys": [
                            ],
                            "secrets": [
                                "get"
                            ],
                            "certificates": [
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('keyvault_name'), '/',variables('userpassword_secret_name'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvault_name'))]"
            ],
            "properties": {
                "value": "[parameters('userpassword_secret_value')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('keyvault_name'), '/',variables('storage_secret_name'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvault_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts',parameters('storage_name'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storage_name'),';AccountKey=',listkeys(concat('Microsoft.Storage/storageAccounts/',parameters('storage_name')),'2019-04-01').keys[0].value)]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storage_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        }
    ]
}